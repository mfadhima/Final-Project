{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\My-Final-Project\\\\final-project\\\\src\\\\components\\\\pages\\\\AccountInfo.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Axios from 'axios';\nimport '../styles/AccountInfo.css';\nconst URL_API = 'http://localhost:8888/';\n\nclass AccountInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      transactions: [],\n      receipt: null,\n      message: ''\n    };\n\n    this.getTransactionUser = () => {\n      Axios.get(URL_API + 'transactions/getuserorder', {\n        params: {\n          userId: this.props.userId\n        }\n      }).then(res => {\n        this.setState({\n          transactions: res.data\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onSaveClick = id => {\n      let fd = new FormData();\n      fd.append('receipt', this.state.receipt, this.state.receipt.name);\n      Axios.put(URL_API + \"transactions/uploadreceipt/\".concat(id), fd).then(res => {\n        this.setState({\n          message: res.data\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.notification = () => {\n      if (!this.state.message) {\n        return null;\n      } else {\n        return React.createElement(\"div\", {\n          className: \"alert-ku alert-success text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, this.state.message);\n      }\n    };\n\n    this.renderTransactionUser = () => {\n      return this.state.transactions.map(val => {\n        let totalPrice = val.totalPrice;\n        let paymentStatus;\n\n        if (val.isVerified === 0) {\n          paymentStatus = 'Pending';\n        } else {\n          paymentStatus = 'Accepted';\n        }\n\n        let uploadReceipt;\n\n        if (val.isVerified === 0) {\n          uploadReceipt = React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            ref: \"uploadReceipt\",\n            hidden: true,\n            onChange: e => {\n              this.setState({\n                receipt: e.target.files[0]\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }), React.createElement(\"input\", {\n            type: \"button\",\n            value: \"Upload Receipt\",\n            className: \"button-ku\",\n            onClick: () => {\n              this.refs.uploadReceipt.click();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }), React.createElement(\"button\", {\n            onClick: () => {\n              this.onSaveClick(val.id);\n            },\n            className: \"button-ku-save btn-block\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, \"Save\"));\n        } else {\n          uploadReceipt = React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          });\n        }\n\n        return React.createElement(\"tr\", {\n          key: val.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \"#\", val.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, val.transactionDate), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"Rp \", totalPrice.toLocaleString('IN')), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, paymentStatus), uploadReceipt);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getTransactionUser();\n  }\n\n  render() {\n    if (this.props.role === 'user') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, this.props.firstName, \" \", this.props.lastName), \" \", React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Transaction History\"), React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Order\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Total\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Payment Status\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, this.renderTransactionUser())), this.notification()));\n    } else {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userEmail: state.auth.email,\n    userId: state.auth.id,\n    role: state.auth.role,\n    firstName: state.auth.firstName,\n    lastName: state.auth.lastName\n  };\n};\n\nexport default connect(mapStateToProps)(AccountInfo);","map":{"version":3,"sources":["C:\\Project\\My-Final-Project\\final-project\\src\\components\\pages\\AccountInfo.jsx"],"names":["React","Component","connect","Redirect","Axios","URL_API","AccountInfo","state","transactions","receipt","message","getTransactionUser","get","params","userId","props","then","res","setState","data","catch","err","console","log","onSaveClick","id","fd","FormData","append","name","put","notification","renderTransactionUser","map","val","totalPrice","paymentStatus","isVerified","uploadReceipt","e","target","files","refs","click","transactionDate","toLocaleString","componentDidMount","render","role","firstName","lastName","mapStateToProps","userEmail","auth","email"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport Axios from 'axios'\r\nimport '../styles/AccountInfo.css'\r\n\r\nconst URL_API = 'http://localhost:8888/'\r\n\r\nclass AccountInfo extends Component {\r\n    state = {\r\n        transactions: [],\r\n        receipt: null,\r\n        message: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTransactionUser()\r\n    }\r\n\r\n    getTransactionUser = () => {\r\n        Axios.get(\r\n            URL_API + 'transactions/getuserorder',\r\n            {\r\n                params: {\r\n                    userId: this.props.userId\r\n                }\r\n            }\r\n        ).then((res) => {\r\n            this.setState({transactions: res.data})\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    onSaveClick = (id) => {\r\n        let fd = new FormData()\r\n        fd.append('receipt', this.state.receipt, this.state.receipt.name)\r\n        Axios.put(\r\n            URL_API + `transactions/uploadreceipt/${id}`, fd\r\n        ).then((res) => {\r\n            this.setState({message: res.data})\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    notification = () => {\r\n        if(!this.state.message) {\r\n            return null\r\n        } else {\r\n            return(\r\n                <div className=\"alert-ku alert-success text-center\">{this.state.message}</div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderTransactionUser = () => {\r\n        return this.state.transactions.map((val) => {\r\n            let totalPrice = val.totalPrice\r\n            let paymentStatus\r\n            if(val.isVerified === 0) {\r\n                paymentStatus = 'Pending'\r\n            } else {\r\n                paymentStatus = 'Accepted'\r\n            }\r\n            let uploadReceipt\r\n            if(val.isVerified === 0) {\r\n                uploadReceipt = <td>\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        accept=\"image/*\"\r\n                                        ref=\"uploadReceipt\"\r\n                                        hidden\r\n                                        onChange={(e) => {this.setState({receipt: e.target.files[0]})}}\r\n                                    />\r\n                                    <input\r\n                                        type=\"button\"\r\n                                        value=\"Upload Receipt\"\r\n                                        className=\"button-ku\"\r\n                                        onClick={() => {this.refs.uploadReceipt.click()}}\r\n                                    />\r\n                                    <button onClick={() => {this.onSaveClick(val.id)}} className=\"button-ku-save btn-block\">Save</button>\r\n                                </td>\r\n            } else {\r\n                uploadReceipt = <td></td>\r\n            }\r\n            return(\r\n                <tr key={val.id}>\r\n                    <td>#{val.id}</td>\r\n                    <td>{val.transactionDate}</td>\r\n                    <td>Rp {totalPrice.toLocaleString('IN')}</td>\r\n                    <td>{paymentStatus}</td>\r\n                    {uploadReceipt}\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.props.role === 'user') {\r\n            return (\r\n                <div>\r\n                    <div className=\"container\">\r\n                        <h3 className=\"mt-5\">{this.props.firstName} {this.props.lastName}</h3> <hr/>\r\n                        <h5>Transaction History</h5>\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Order</th>\r\n                                    <th>Date</th>\r\n                                    <th>Total</th>\r\n                                    <th>Payment Status</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.renderTransactionUser()}\r\n                            </tbody>\r\n                        </table>\r\n                        {this.notification()}\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <Redirect to=\"/\"/>\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userEmail: state.auth.email,\r\n        userId: state.auth.id,\r\n        role: state.auth.role,\r\n        firstName: state.auth.firstName,\r\n        lastName: state.auth.lastName\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AccountInfo)"]},"metadata":{},"sourceType":"module"}