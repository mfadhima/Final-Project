{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\My-Final-Project\\\\final-project\\\\src\\\\container\\\\Cart.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport '../styles/Cart.css';\nimport Axios from 'axios';\nimport Checkout from '../components/Checkout';\nconst URL_API = 'http://localhost:8888/';\n\nclass Cart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      carts: [],\n      checkouts: null,\n      selectedId: 0,\n      selectedQty: 0\n    };\n\n    this.getCartData = () => {\n      Axios.get(URL_API + 'carts/getcart', {\n        params: {\n          userId: this.props.userId\n        }\n      }).then(res => {\n        this.setState({\n          carts: res.data,\n          selectedId: 0\n        }); // console.log(this.state.carts)\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onEditClick = val => {\n      this.setState({\n        selectedId: val.id,\n        selectedQty: val.quantity\n      });\n    };\n\n    this.onDeleteClick = id => {\n      Axios.delete(URL_API + \"carts/deletecart/\".concat(id)).then(res => {\n        this.getCartData();\n        console.log(res.data);\n      });\n    };\n\n    this.onSaveClick = id => {\n      if (this.state.selectedQty <= 0) {\n        Axios.delete(URL_API + \"carts/deletecart/\".concat(id)).then(res => {\n          this.getCartData();\n          console.log(res.data);\n        });\n      } else {\n        Axios.put(URL_API + \"carts/addsameproduct/\".concat(id), {\n          quantity: this.state.selectedQty\n        }).then(res => {\n          console.log(res.data);\n          this.getCartData();\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.onCheckoutClick = () => {\n      this.setState({\n        checkouts: this.state.carts\n      }); // console.log(this.state.checkouts)\n    };\n\n    this.renderCheckoutButton = () => {\n      if (this.state.carts.length === 0) {\n        return null;\n      } else {\n        return React.createElement(\"div\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: this.onCheckoutClick,\n          className: \"button-ku-checkout btn-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"Checkout\"));\n      }\n    };\n\n    this.renderCart = () => {\n      return this.state.carts.map(val => {\n        let image = URL_API + val.productImage;\n        let productPrice = val.productPrice;\n\n        if (this.state.selectedId !== val.id) {\n          return React.createElement(\"tr\", {\n            key: val.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: image,\n            alt: \"\",\n            width: \"200px\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          })), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }, val.productName), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }, \"Rp \", productPrice.toLocaleString('IN')), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, val.quantity), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            onClick: () => {\n              this.onEditClick(val);\n            },\n            className: \"button-ku mb-1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, \"Edit Qty\"), React.createElement(\"button\", {\n            onClick: () => {\n              this.onDeleteClick(val.id);\n            },\n            className: \"button-ku-delete btn-block\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, \"Delete\")));\n        } else {\n          return React.createElement(\"tr\", {\n            key: val.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: image,\n            alt: \"\",\n            width: \"200px\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          })), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, val.productName), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, \"Rp \", productPrice.toLocaleString('IN')), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            className: \"form-control\",\n            onChange: e => {\n              this.setState({\n                selectedQty: e.target.value\n              });\n            },\n            value: this.state.selectedQty,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          })), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            onClick: () => {\n              this.onSaveClick(val.id);\n            },\n            className: \"button-ku mb-1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, \"Save\"), React.createElement(\"button\", {\n            onClick: () => {\n              this.setState({\n                selectedId: 0\n              });\n            },\n            className: \"button-ku-delete btn-block\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, \"Cancel\")));\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getCartData();\n  }\n\n  render() {\n    if (this.props.role === 'user') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Shopping Cart\"), React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Image\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Product\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Price\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Quantity\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, this.renderCart())), this.renderCheckoutButton(), React.createElement(Checkout, {\n        carts: this.state.checkouts,\n        userId: this.props.userId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userId: state.auth.id,\n    role: state.auth.role\n  };\n};\n\nexport default connect(mapStateToProps)(Cart);","map":{"version":3,"sources":["C:\\Project\\My-Final-Project\\final-project\\src\\container\\Cart.jsx"],"names":["React","Component","connect","Redirect","Axios","Checkout","URL_API","Cart","state","carts","checkouts","selectedId","selectedQty","getCartData","get","params","userId","props","then","res","setState","data","catch","err","console","log","onEditClick","val","id","quantity","onDeleteClick","delete","onSaveClick","put","onCheckoutClick","renderCheckoutButton","length","renderCart","map","image","productImage","productPrice","productName","toLocaleString","e","target","value","componentDidMount","render","role","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport '../styles/Cart.css'\r\nimport Axios from 'axios'\r\n\r\nimport Checkout from '../components/Checkout'\r\n\r\nconst URL_API = 'http://localhost:8888/'\r\n\r\nclass Cart extends Component {\r\n    state = {\r\n        carts: [],\r\n        checkouts: null,\r\n        selectedId: 0,\r\n        selectedQty: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCartData()\r\n    }\r\n\r\n    getCartData = () => {\r\n        Axios.get(\r\n            URL_API + 'carts/getcart',\r\n            {\r\n                params: {\r\n                    userId: this.props.userId\r\n                }\r\n            }\r\n        ).then((res) => {\r\n            this.setState({\r\n                carts: res.data,\r\n                selectedId: 0\r\n            })\r\n            // console.log(this.state.carts)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    onEditClick = (val) => {\r\n        this.setState({\r\n            selectedId: val.id,\r\n            selectedQty: val.quantity\r\n        })\r\n    }\r\n\r\n    onDeleteClick = (id) => {\r\n        Axios.delete(\r\n            URL_API + `carts/deletecart/${id}`\r\n        ).then((res) => {\r\n            this.getCartData()\r\n            console.log(res.data)\r\n        })\r\n    }\r\n    \r\n    onSaveClick = (id) => {\r\n        if(this.state.selectedQty <= 0) {\r\n            Axios.delete(\r\n                URL_API + `carts/deletecart/${id}`\r\n            ).then((res) => {\r\n                this.getCartData()\r\n                console.log(res.data)\r\n            })\r\n        } else {\r\n            Axios.put(\r\n                URL_API + `carts/addsameproduct/${id}`,\r\n                {\r\n                    quantity: this.state.selectedQty\r\n                }\r\n            ).then((res) => {\r\n                console.log(res.data)\r\n                this.getCartData()\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n        }\r\n    }\r\n\r\n    onCheckoutClick = () => {\r\n        this.setState({checkouts: this.state.carts})\r\n        // console.log(this.state.checkouts)\r\n    }\r\n\r\n    renderCheckoutButton = () => {\r\n        if(this.state.carts.length === 0) {\r\n            return null\r\n        } else {\r\n            return(\r\n                <div className=\"text-center\">\r\n                    <button onClick={this.onCheckoutClick} className=\"button-ku-checkout btn-block\">Checkout</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderCart = () => {\r\n        return this.state.carts.map((val) => {\r\n            let image = URL_API + val.productImage\r\n            let productPrice = val.productPrice\r\n            if(this.state.selectedId !== val.id) {\r\n                return (\r\n                    <tr key={val.id}>\r\n                        <td>\r\n                            <img src={image} alt=\"\" width=\"200px\"/>\r\n                        </td>\r\n                        <td>{val.productName}</td>\r\n                        <td>Rp {productPrice.toLocaleString('IN')}</td>\r\n                        <td>{val.quantity}</td>\r\n                        <td>\r\n                            <button onClick={() => {this.onEditClick(val)}} className=\"button-ku mb-1\">Edit Qty</button>\r\n                            <button onClick={() => {this.onDeleteClick(val.id)}} className=\"button-ku-delete btn-block\">Delete</button>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            } else {\r\n                return (\r\n                    <tr key={val.id}>\r\n                        <td>\r\n                            <img src={image} alt=\"\" width=\"200px\"/>\r\n                        </td>\r\n                        <td>{val.productName}</td>\r\n                        <td>Rp {productPrice.toLocaleString('IN')}</td>\r\n                        <td><input type=\"number\" min=\"1\" className=\"form-control\" onChange={(e) => {this.setState({selectedQty: e.target.value})}} value={this.state.selectedQty}/></td>\r\n                        <td>\r\n                            <button onClick={() => {this.onSaveClick(val.id)}} className=\"button-ku mb-1\">Save</button>\r\n                            <button onClick={() => {this.setState({selectedId: 0})}} className=\"button-ku-delete btn-block\">Cancel</button>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.props.role === 'user') {\r\n            return(\r\n                <div>\r\n                    <div className=\"container\">\r\n                        <h4 className=\"mt-5\">Shopping Cart</h4>\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Image</th>\r\n                                    <th>Product</th>\r\n                                    <th>Price</th>\r\n                                    <th>Quantity</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.renderCart()}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        {this.renderCheckoutButton()}\r\n\r\n                        <Checkout carts={this.state.checkouts} userId={this.props.userId} />\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.auth.id,\r\n        role: state.auth.role\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Cart)"]},"metadata":{},"sourceType":"module"}