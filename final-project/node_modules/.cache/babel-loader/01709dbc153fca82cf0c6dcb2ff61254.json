{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\My-Final-Project\\\\final-project\\\\src\\\\components\\\\ManageProducts.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Axios from 'axios';\nimport './ManageProducts.css';\nconst URL_API = 'http://localhost:8888/';\n\nclass ManageProducts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      productName: '',\n      productDesc: '',\n      productPrice: 0,\n      productImage: null,\n      productData: [],\n      message: ''\n    };\n\n    this.getProductData = () => {\n      Axios.get(URL_API + 'products/productdata').then(res => {\n        // console.log(res.data)\n        this.setState({\n          productData: res.data\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onDeleteClick = id => {\n      // console.log(id)\n      Axios.delete(URL_API + \"products/deleteproduct/\".concat(id)).then(res => {\n        this.getProductData();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.renderProduct = () => {\n      return this.state.productData.map(value => {\n        return React.createElement(\"tr\", {\n          key: value.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, value.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, value.desc), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"Rp \", parseInt(value.price).toLocaleString('IN')), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: URL_API + value.image,\n          alt: \"product\",\n          width: \"100px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(\"button\", {\n          onClick: () => {\n            this.onDeleteClick(value.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"Delete\")));\n      });\n    };\n\n    this.onAddClick = () => {\n      if (!this.state.productName || !this.state.productDesc || !this.state.productPrice || !this.state.productImage) {\n        this.setState({\n          message: 'Please fill all forms..'\n        });\n      } else {\n        let fd = new FormData();\n        fd.append('products', this.state.productImage, this.state.productImage.name);\n        fd.append('name', this.state.productName);\n        fd.append('desc', this.state.productDesc);\n        fd.append('price', this.state.productPrice);\n        Axios.post(URL_API + 'products/addproduct', fd).then(res => {\n          // console.log(res)\n          this.setState({\n            message: res.data\n          });\n          this.getProductData();\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.notification = () => {\n      if (!this.state.message) {\n        return null;\n      } else {\n        if (this.state.message === 'Please fill all forms..') {\n          return React.createElement(\"div\", {\n            className: \"alert-ku alert-danger mb-3 text-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, this.state.message);\n        } else {\n          return React.createElement(\"div\", {\n            className: \"alert-ku alert-success mb-3 text-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, this.state.message);\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getProductData();\n  }\n\n  render() {\n    if (this.props.role === 'administrator') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Add new Product\"), React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        required: true,\n        type: \"text\",\n        className: \"form-control\",\n        onChange: e => {\n          this.setState({\n            productName: e.target.value\n          });\n        },\n        placeholder: \"Product Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        required: true,\n        type: \"text\",\n        className: \"form-control\",\n        onChange: e => {\n          this.setState({\n            productDesc: e.target.value\n          });\n        },\n        placeholder: \"Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        required: true,\n        type: \"text\",\n        className: \"form-control\",\n        onChange: e => {\n          this.setState({\n            productPrice: e.target.value\n          });\n        },\n        placeholder: \"Price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        ref: \"uploadImage\",\n        hidden: true,\n        onChange: e => {\n          this.setState({\n            productImage: e.target.files[0]\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Choose an image\",\n        className: \"button-ku\",\n        onClick: () => {\n          this.refs.uploadImage.click();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"button-ku\",\n        onClick: this.onAddClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Add Product\"))))), this.notification(), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Our Products\"), React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"col-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Product Name\"), React.createElement(\"th\", {\n        className: \"col-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        className: \"col-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Price\"), React.createElement(\"th\", {\n        className: \"col-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Image\"), React.createElement(\"th\", {\n        className: \"col-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Action\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, this.renderProduct()))));\n    } else {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    role: state.auth.role\n  };\n};\n\nexport default connect(mapStateToProps, {})(ManageProducts);","map":{"version":3,"sources":["C:\\Project\\My-Final-Project\\final-project\\src\\components\\ManageProducts.jsx"],"names":["React","Component","connect","Redirect","Axios","URL_API","ManageProducts","state","productName","productDesc","productPrice","productImage","productData","message","getProductData","get","then","res","setState","data","catch","err","console","log","onDeleteClick","id","delete","renderProduct","map","value","name","desc","parseInt","price","toLocaleString","image","onAddClick","fd","FormData","append","post","notification","componentDidMount","render","props","role","e","target","files","refs","uploadImage","click","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport Axios from 'axios'\r\n\r\nimport './ManageProducts.css'\r\n\r\nconst URL_API = 'http://localhost:8888/'\r\n\r\nclass ManageProducts extends Component {\r\n    state = {\r\n        productName: '',\r\n        productDesc: '',\r\n        productPrice: 0,\r\n        productImage: null,\r\n        productData: [],\r\n        message: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getProductData()\r\n    }\r\n\r\n    getProductData = () => {\r\n        Axios.get(\r\n            URL_API + 'products/productdata'\r\n        ).then((res) => {\r\n            // console.log(res.data)\r\n            this.setState({productData: res.data})\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    onDeleteClick = (id) => {\r\n        // console.log(id)\r\n        Axios.delete(\r\n            URL_API + `products/deleteproduct/${id}`\r\n        ).then((res) => {\r\n            this.getProductData()\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    renderProduct = () => {\r\n        return this.state.productData.map((value) => {\r\n            return(\r\n                <tr key={value.id}>\r\n                    <td>{value.name}</td>\r\n                    <td>{value.desc}</td>\r\n                    <td>Rp {parseInt(value.price).toLocaleString('IN')}</td>\r\n                    <td><img src={URL_API + value.image} alt=\"product\" width=\"100px\"/></td>\r\n                    <td>\r\n                        <button>Edit</button>\r\n                        <button onClick={()=>{this.onDeleteClick(value.id)}}>Delete</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    onAddClick = () => {\r\n        if(!this.state.productName || !this.state.productDesc || !this.state.productPrice || !this.state.productImage) {\r\n            this.setState({message: 'Please fill all forms..'})\r\n        } else {\r\n            let fd = new FormData()\r\n            fd.append('products', this.state.productImage, this.state.productImage.name)\r\n            fd.append('name', this.state.productName)\r\n            fd.append('desc', this.state.productDesc)\r\n            fd.append('price', this.state.productPrice)\r\n            Axios.post(\r\n                URL_API + 'products/addproduct', fd\r\n            ).then((res) => {\r\n                // console.log(res)\r\n                this.setState({\r\n                    message: res.data\r\n                })\r\n                this.getProductData()\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n        }\r\n    }\r\n\r\n    notification = () => {\r\n        if(!this.state.message) {\r\n            return null\r\n        } else {\r\n            if(this.state.message === 'Please fill all forms..') {\r\n                return(\r\n                    <div className=\"alert-ku alert-danger mb-3 text-center\">{this.state.message}</div>\r\n                )\r\n            } else {\r\n                return(\r\n                    <div className=\"alert-ku alert-success mb-3 text-center\">{this.state.message}</div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.props.role === 'administrator') {\r\n            return(\r\n                <div>\r\n                    <div className=\"container\">\r\n                        <h5 className=\"mt-3\">Add new Product</h5>\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><input required type=\"text\" className=\"form-control\" onChange={(e) => {this.setState({productName: e.target.value})}} placeholder=\"Product Name\"/></td>\r\n                                    <td><input required type=\"text\" className=\"form-control\" onChange={(e) => {this.setState({productDesc: e.target.value})}} placeholder=\"Description\"/></td>\r\n                                    <td><input required type=\"text\" className=\"form-control\" onChange={(e) => {this.setState({productPrice: e.target.value})}} placeholder=\"Price\"/></td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            accept=\"image/*\"\r\n                                            ref=\"uploadImage\"\r\n                                            hidden\r\n                                            onChange={(e) => {this.setState({productImage: e.target.files[0]})}}\r\n                                        />\r\n                                        <input\r\n                                            type=\"button\"\r\n                                            value=\"Choose an image\"\r\n                                            className=\"button-ku\"\r\n                                            onClick={() => {this.refs.uploadImage.click()}}\r\n                                        />\r\n                                    </td>\r\n                                    <td><button className=\"button-ku\" onClick={this.onAddClick}>Add Product</button></td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {this.notification()}\r\n\r\n                        <h5>Our Products</h5>\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"col-2\">Product Name</th>\r\n                                    <th className=\"col-4\">Description</th>\r\n                                    <th className=\"col-2\">Price</th>\r\n                                    <th className=\"col-1\">Image</th>\r\n                                    <th className=\"col-2\">Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.renderProduct()}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <Redirect to=\"/\"/>\r\n        }\r\n    } \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        role: state.auth.role\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(ManageProducts)"]},"metadata":{},"sourceType":"module"}