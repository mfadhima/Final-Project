{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\My-Final-Project\\\\final-project\\\\src\\\\container\\\\Transaction.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Axios from 'axios';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\nimport Classnames from 'classnames';\nconst URL_API = 'http://localhost:8888/';\n\nclass Transaction extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      transactions: [],\n      verifiedTransaction: [],\n      message: '',\n      activeTab: '1'\n    };\n\n    this.toggle = tab => {\n      if (this.state.activeTab !== tab) this.setState({\n        activeTab: tab\n      });\n    };\n\n    this.getTransaction = () => {\n      Axios.get(URL_API + 'transactions/gettransaction').then(res => {\n        this.setState({\n          transactions: res.data\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.getVerifiedTransaction = () => {\n      Axios.get(URL_API + 'transactions/getverifiedtransaction').then(res => {\n        this.setState({\n          verifiedTransactions: res.data\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.notification = () => {\n      if (!this.state.message) {\n        return null;\n      } else {\n        return React.createElement(\"div\", {\n          className: \"alert-ku alert-success text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, this.state.message);\n      }\n    };\n\n    this.onVerifyClick = id => {\n      Axios.put(URL_API + \"transactions/verifypayment/\".concat(id)).then(res => {\n        this.setState({\n          message: res.data\n        });\n        this.getTransaction();\n        this.getVerifiedTransaction();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onRejectClick = id => {\n      Axios.put(URL_API + \"transactions/rejectpayment/\".concat(id)).then(res => {\n        this.setState({\n          message: res.data\n        });\n        this.getTransaction();\n        this.getVerifiedTransaction();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.renderTransaction = () => {\n      return this.state.transactions.map(val => {\n        let receipt = URL_API + val.receipt;\n        let verifyButton;\n        let rejectButton;\n\n        if (val.isVerified === 0) {\n          verifyButton = React.createElement(\"button\", {\n            className: \"btn btn-outline-info mb-2 text-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, \"Verify\");\n          rejectButton = React.createElement(\"button\", {\n            className: \"btn btn-outline-danger text-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, \"Reject\");\n        } else if (val.isVerified === 1) {\n          verifyButton = React.createElement(\"button\", {\n            className: \"btn btn-outline-secondary disabled\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, \"Verified\");\n        } else if (val.isVerified === 2) {\n          rejectButton = React.createElement(\"button\", {\n            className: \"btn btn-outline-secondary disabled\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, \"Rejected\");\n        }\n\n        return (//     <tr key={val.id}>\n          //         <td>#{val.id}</td>\n          //         <td>{val.transactionDate}</td>\n          //         <td>Rp {val.totalPrice.toLocaleString('IN')}</td>\n          //         <td><img src={receipt} alt=\"\" width=\"300px\"/></td>\n          //         <td>\n          //             <div onClick={() => {this.onVerifyClick(val.id)}}>{verifyButton}</div>\n          //             <div onClick={() => {this.onRejectClick(val.id)}}>{rejectButton}</div>\n          //         </td>\n          //     </tr>\n          // )\n          React.createElement(\"table\", {\n            className: \"table\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, React.createElement(\"thead\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }, React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }, React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, \"Order\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, \"Date\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, \"Total\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, \"Payment Receipt\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }, \"Action\"))), React.createElement(\"tbody\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, React.createElement(\"tr\", {\n            key: val.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, \"#\", val.id), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, val.transactionDate), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, \"Rp \", val.totalPrice.toLocaleString('IN')), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: receipt,\n            alt: \"\",\n            width: \"300px\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          })), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            onClick: () => {\n              this.onVerifyClick(val.id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, verifyButton), React.createElement(\"div\", {\n            onClick: () => {\n              this.onRejectClick(val.id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, rejectButton)))))\n        );\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getTransaction();\n    this.getVerifiedTransaction();\n  }\n\n  render() {\n    if (this.props.role === 'administrator') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Transaction\"), \" \", React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(Nav, {\n        tabs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: Classnames({\n          active: this.state.activeTab === '1'\n        }),\n        onClick: () => {\n          this.toggle('1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Pending Transaction\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: Classnames({\n          active: this.state.activeTab === '2'\n        }),\n        onClick: () => {\n          this.toggle('2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Verified Transaction\"))), React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tabId: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), this.renderTransaction(), this.notification()));\n    } else {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    role: state.auth.role\n  };\n};\n\nexport default connect(mapStateToProps)(Transaction);","map":{"version":3,"sources":["C:\\Project\\My-Final-Project\\final-project\\src\\container\\Transaction.jsx"],"names":["React","Component","connect","Redirect","Axios","TabContent","TabPane","Nav","NavItem","NavLink","Row","Col","Classnames","URL_API","Transaction","state","transactions","verifiedTransaction","message","activeTab","toggle","tab","setState","getTransaction","get","then","res","data","catch","err","console","log","getVerifiedTransaction","verifiedTransactions","notification","onVerifyClick","id","put","onRejectClick","renderTransaction","map","val","receipt","verifyButton","rejectButton","isVerified","transactionDate","totalPrice","toLocaleString","componentDidMount","render","props","role","active","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport Axios from 'axios'\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\r\nimport Classnames from 'classnames';\r\n\r\nconst URL_API = 'http://localhost:8888/'\r\n\r\nclass Transaction extends Component {\r\n    state = {\r\n        transactions: [],\r\n        verifiedTransaction: [],\r\n        message: '',\r\n        activeTab: '1'\r\n    }\r\n\r\n    toggle = (tab) => {\r\n        if(this.state.activeTab !== tab) this.setState({activeTab: tab})\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTransaction()\r\n        this.getVerifiedTransaction()\r\n    }\r\n\r\n    getTransaction = () => {\r\n        Axios.get(\r\n            URL_API + 'transactions/gettransaction'\r\n        ).then((res) => {\r\n            this.setState({transactions: res.data})\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    getVerifiedTransaction = () => {\r\n        Axios.get(\r\n            URL_API + 'transactions/getverifiedtransaction'\r\n        ).then((res) => {\r\n            this.setState({verifiedTransactions: res.data})\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    notification = () => {\r\n        if(!this.state.message) {\r\n            return null\r\n        } else {\r\n            return(\r\n                <div className=\"alert-ku alert-success text-center\">{this.state.message}</div>\r\n            )\r\n        }\r\n    }\r\n\r\n    onVerifyClick = (id) => {\r\n        Axios.put(\r\n            URL_API + `transactions/verifypayment/${id}`\r\n        ).then((res) => {\r\n            this.setState({message: res.data})\r\n            this.getTransaction()\r\n            this.getVerifiedTransaction()\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    onRejectClick = (id) => {\r\n        Axios.put(\r\n            URL_API + `transactions/rejectpayment/${id}`\r\n        ).then((res) => {\r\n            this.setState({message: res.data})\r\n            this.getTransaction()\r\n            this.getVerifiedTransaction()\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    renderTransaction = () => {\r\n        return this.state.transactions.map((val) => {\r\n            let receipt = URL_API + val.receipt\r\n            let verifyButton\r\n            let rejectButton\r\n            if(val.isVerified === 0) {\r\n                verifyButton = <button className=\"btn btn-outline-info mb-2 text-center\">Verify</button>\r\n                rejectButton = <button className=\"btn btn-outline-danger text-center\">Reject</button>\r\n            } else if(val.isVerified === 1) {\r\n                verifyButton = <button className=\"btn btn-outline-secondary disabled\">Verified</button>\r\n            } else if(val.isVerified === 2) {\r\n                rejectButton = <button className=\"btn btn-outline-secondary disabled\">Rejected</button>\r\n            }\r\n\r\n            return(\r\n            //     <tr key={val.id}>\r\n            //         <td>#{val.id}</td>\r\n            //         <td>{val.transactionDate}</td>\r\n            //         <td>Rp {val.totalPrice.toLocaleString('IN')}</td>\r\n            //         <td><img src={receipt} alt=\"\" width=\"300px\"/></td>\r\n            //         <td>\r\n            //             <div onClick={() => {this.onVerifyClick(val.id)}}>{verifyButton}</div>\r\n            //             <div onClick={() => {this.onRejectClick(val.id)}}>{rejectButton}</div>\r\n            //         </td>\r\n            //     </tr>\r\n            // )\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Order</th>\r\n                            <th>Date</th>\r\n                            <th>Total</th>\r\n                            <th>Payment Receipt</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr key={val.id}>\r\n                            <td>#{val.id}</td>\r\n                            <td>{val.transactionDate}</td>\r\n                            <td>Rp {val.totalPrice.toLocaleString('IN')}</td>\r\n                            <td><img src={receipt} alt=\"\" width=\"300px\"/></td>\r\n                            <td>\r\n                                <div onClick={() => {this.onVerifyClick(val.id)}}>{verifyButton}</div>\r\n                                <div onClick={() => {this.onRejectClick(val.id)}}>{rejectButton}</div>\r\n                            </td>\r\n                        </tr>\r\n                        {/* {this.renderTransaction()} */}\r\n                    </tbody>\r\n                </table>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.props.role === 'administrator') {\r\n            return(\r\n                <div>\r\n                    <div className=\"container\">\r\n                        <h2 className=\"mt-5\">Transaction</h2> <hr/>\r\n                        <Nav tabs>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={Classnames({ active: this.state.activeTab === '1' })}\r\n                                    onClick={() => { this.toggle('1'); }}\r\n                                >\r\n                                    Pending Transaction\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={Classnames({ active: this.state.activeTab === '2' })}\r\n                                    onClick={() => { this.toggle('2'); }}\r\n                                >\r\n                                    Verified Transaction\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n\r\n                        <TabContent activeTab={this.state.activeTab}>\r\n                            <TabPane tabId=\"1\">\r\n\r\n                            </TabPane>\r\n                        </TabContent>\r\n                        {this.renderTransaction()}\r\n                        {this.notification()}\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <Redirect to=\"/\"/>\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        role: state.auth.role\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Transaction)"]},"metadata":{},"sourceType":"module"}