{"ast":null,"code":"import Axios from 'axios';\nconst URL_API = 'http://localhost:8888/';\nexport const onLoginUser = (EMAIL, PASSWORD) => {\n  return dispatch => {\n    Axios.get(URL_API + 'auth/login', {\n      params: {\n        email: EMAIL,\n        password: PASSWORD\n      }\n    }).then(res => {\n      // console.log(res.data)\n      if (res.data.status === '400') {\n        console.log(res.data.message);\n        let _res$data = res.data,\n            status = _res$data.status,\n            message = _res$data.message;\n        dispatch({\n          type: 'LOGIN_FAILED',\n          payload: {\n            status,\n            message\n          }\n        });\n      } else if (res.data.status === '200') {\n        let _res$data$result = res.data.result,\n            id = _res$data$result.id,\n            email = _res$data$result.email,\n            role = _res$data$result.role;\n        localStorage.setItem('userData', JSON.stringify({\n          id,\n          email,\n          role\n        }));\n        dispatch({\n          type: 'LOGIN_SUCCESS',\n          payload: {\n            id,\n            email,\n            role\n          }\n        });\n      }\n    });\n  };\n};\nexport const keepLogin = USER => {\n  return {\n    type: 'LOGIN_SUCCESS',\n    payload: {\n      id: USER.id,\n      email: USER.email,\n      role: USER.role\n    }\n  };\n};\nexport const onLogoutUser = () => {\n  localStorage.removeItem('userData');\n  return {\n    type: 'LOGOUT_SUCCESS'\n  };\n};","map":{"version":3,"sources":["C:\\Project\\My-Final-Project\\final-project\\src\\components\\1.actions\\authAction.js"],"names":["Axios","URL_API","onLoginUser","EMAIL","PASSWORD","dispatch","get","params","email","password","then","res","data","status","console","log","message","type","payload","result","id","role","localStorage","setItem","JSON","stringify","keepLogin","USER","onLogoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,wBAAhB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC5C,SAAOC,QAAD,IAAc;AAChBL,IAAAA,KAAK,CAACM,GAAN,CACIL,OAAO,GAAG,YADd,EAEI;AACIM,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAEL,KADH;AAEJM,QAAAA,QAAQ,EAAEL;AAFN;AADZ,KAFJ,EAQEM,IARF,CAQQC,GAAD,IAAS;AACZ;AACA,UAAGA,GAAG,CAACC,IAAJ,CAASC,MAAT,KAAoB,KAAvB,EAA8B;AAC1BC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACC,IAAJ,CAASI,OAArB;AAD0B,wBAEFL,GAAG,CAACC,IAFF;AAAA,YAErBC,MAFqB,aAErBA,MAFqB;AAAA,YAEbG,OAFa,aAEbA,OAFa;AAG1BX,QAAAA,QAAQ,CAAC;AACLY,UAAAA,IAAI,EAAE,cADD;AAELC,UAAAA,OAAO,EAAE;AACLL,YAAAA,MADK;AACGG,YAAAA;AADH;AAFJ,SAAD,CAAR;AAMH,OATD,MASO,IAAGL,GAAG,CAACC,IAAJ,CAASC,MAAT,KAAoB,KAAvB,EAA8B;AAAA,+BACTF,GAAG,CAACC,IAAJ,CAASO,MADA;AAAA,YAC5BC,EAD4B,oBAC5BA,EAD4B;AAAA,YACxBZ,KADwB,oBACxBA,KADwB;AAAA,YACjBa,IADiB,oBACjBA,IADiB;AAEjCC,QAAAA,YAAY,CAACC,OAAb,CACI,UADJ,EAEIC,IAAI,CAACC,SAAL,CAAe;AAACL,UAAAA,EAAD;AAAKZ,UAAAA,KAAL;AAAYa,UAAAA;AAAZ,SAAf,CAFJ;AAIAhB,QAAAA,QAAQ,CAAC;AACLY,UAAAA,IAAI,EAAE,eADD;AAELC,UAAAA,OAAO,EAAE;AACLE,YAAAA,EADK;AACDZ,YAAAA,KADC;AACMa,YAAAA;AADN;AAFJ,SAAD,CAAR;AAMH;AACJ,KAhCD;AAiCH,GAlCD;AAmCH,CApCM;AAsCP,OAAO,MAAMK,SAAS,GAAIC,IAAD,IAAU;AAC/B,SAAO;AACHV,IAAAA,IAAI,EAAE,eADH;AAEHC,IAAAA,OAAO,EAAE;AACLE,MAAAA,EAAE,EAAEO,IAAI,CAACP,EADJ;AAELZ,MAAAA,KAAK,EAAEmB,IAAI,CAACnB,KAFP;AAGLa,MAAAA,IAAI,EAAEM,IAAI,CAACN;AAHN;AAFN,GAAP;AAQH,CATM;AAWP,OAAO,MAAMO,YAAY,GAAG,MAAM;AAC9BN,EAAAA,YAAY,CAACO,UAAb,CAAwB,UAAxB;AACA,SAAO;AACHZ,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CALM","sourcesContent":["import Axios from 'axios'\r\n\r\nconst URL_API = 'http://localhost:8888/'\r\n\r\nexport const onLoginUser = (EMAIL, PASSWORD) => {\r\n    return(dispatch) => {\r\n        Axios.get(\r\n            URL_API + 'auth/login',\r\n            {\r\n                params: {\r\n                    email: EMAIL,\r\n                    password: PASSWORD\r\n                }\r\n            }\r\n        ).then((res) => {\r\n            // console.log(res.data)\r\n            if(res.data.status === '400') {\r\n                console.log(res.data.message)\r\n                let {status, message} = res.data\r\n                dispatch({\r\n                    type: 'LOGIN_FAILED',\r\n                    payload: {\r\n                        status, message\r\n                    }\r\n                })\r\n            } else if(res.data.status === '200') {\r\n                let {id, email, role} = res.data.result\r\n                localStorage.setItem(\r\n                    'userData',\r\n                    JSON.stringify({id, email, role})\r\n                )\r\n                dispatch({\r\n                    type: 'LOGIN_SUCCESS',\r\n                    payload: {\r\n                        id, email, role\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const keepLogin = (USER) => {\r\n    return {\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: {\r\n            id: USER.id,\r\n            email: USER.email,\r\n            role: USER.role\r\n        }\r\n    }\r\n}\r\n\r\nexport const onLogoutUser = () => {\r\n    localStorage.removeItem('userData')\r\n    return {\r\n        type: 'LOGOUT_SUCCESS'\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}